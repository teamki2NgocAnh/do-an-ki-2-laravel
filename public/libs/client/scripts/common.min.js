function getCookie(e) {
    var t = document.cookie.match("(^|;) ?" + e + "=([^;]*)(;|$)");
    return t ? t[2] : null
}

function setCookie(e, t, n) {
    var o = new Date;
    o.setTime(o.getTime() + 24 * n * 60 * 60 * 1e3);
    var r = "expires=" + o.toUTCString();
    document.cookie = e + "=" + t + ";" + r + ";path=/"
}

var loadJSScroll = !1, delay = function (e) {
    var t = 0;
    return function (e, n) {
        clearTimeout(t), t = setTimeout(e, n)
    }
}();

function number_format(e, t, n, o) {
    for (var r = (e *= 1).toFixed(t || 0).toString().split("."), a = [], s = r[0].length; s > 0; s -= 3) a.unshift(r[0].substring(Math.max(0, s - 3), s));
    return r[0] = a.join(o || "."), r.join(n || ",")
}

function lazyload() {
    var e = [].slice.call(document.querySelectorAll(".lazy-image"));
    if (e.length > 0) if ("IntersectionObserver" in window) {
        let t = new IntersectionObserver(function (e, n) {
            e.forEach(function (e) {
                if (e.isIntersecting) {
                    let n = e.target;
                    void 0 !== n.dataset.src && "" != n.dataset.src && (n.src = n.dataset.src), void 0 !== n.dataset.srcset && "" != n.dataset.srcset && (n.srcset = n.dataset.srcset), t.unobserve(n), n.classList.remove("lazy-image")
                }
            })
        });
        e.forEach(function (e) {
            t.observe(e)
        })
    } else e.forEach(function (e) {
        void 0 !== e.dataset.src && "" != e.dataset.src && (e.src = e.dataset.src), void 0 !== e.dataset.srcset && "" != e.dataset.srcset && (e.srcset = e.dataset.srcset)
    });
    var t = [].slice.call(document.querySelectorAll(".lazy-picture > source"));
    if (t.length > 0) if ("IntersectionObserver" in window) {
        let e = new IntersectionObserver(function (t, n) {
            t.forEach(function (t) {
                if (t.isIntersecting) {
                    let n = t.target;
                    void 0 !== n.dataset.srcset && "" != n.dataset.srcset && (n.srcset = n.dataset.srcset), void 0 !== n.dataset.src && "" != n.dataset.src && (n.nextElementSibling.src = n.dataset.srcset), n.parentElement.classList.remove("lazy-picture"), e.unobserve(n);
                    let o = getClosest(n, ".image-auto");
                    o && o.classList.remove("image-wrapper")
                }
            })
        });
        t.forEach(function (t) {
            e.observe(t)
        })
    } else t.forEach(function (e) {
        e.srcset = e.dataset.srcset
    });
    var n = [].slice.call(document.querySelectorAll(".lazy-class"));
    if (n.length > 0) if ("IntersectionObserver" in window) {
        let e = new IntersectionObserver(function (t, n) {
            t.forEach(function (t) {
                if (t.isIntersecting) {
                    let n, o = t.target, r = o.dataset.class;
                    if (r) {
                        let e = (r = r.replace(/\s\s+/g, " ")).split(" ");
                        for (n = 0; n < e.length; n++) e[n] && o.classList.add(e[n])
                    }
                    o.classList.remove("lazy-class"), e.unobserve(o)
                }
            })
        });
        n.forEach(function (t) {
            e.observe(t)
        })
    } else n.forEach(function (e) {
        e.classList.add(e.dataset.class)
    })
}

function eventTab() {
    var e = document.querySelector("#event-toolbar");
    if (e) {
        var t = window.pageYOffset, n = document.querySelector("#header").getBoundingClientRect().height,
            o = offset(e).top, r = e.getBoundingClientRect().height;
        t + n > o ? (e.style.height = r.toString() + "px", e.classList.add("sticky-fixed")) : (e.style.height = "", e.classList.remove("sticky-fixed"))
    }
}

function countDown(e, t) {
    e.classList.add("countdown-item"), e.innerHTML = '<i class="ic ic-watcher"></i> <span class="countdown-day">__</span>:<span class="countdown-hour">__</span>:<span class="countdown-minute">__</span>:<span class="countdown-second">__</span>';
    var n = new Date(t).getTime(), o = (new Date).getTime();
    if (n - o > 0) var r = setInterval(function () {
        var t = (new Date).getTime(), o = n - t, a = Math.floor(o / 864e5);
        a < 10 && (a = "0" + a.toString());
        var s = Math.floor(o % 864e5 / 36e5);
        s < 10 && (s = "0" + s.toString());
        var i = Math.floor(o % 36e5 / 6e4);
        i < 10 && (i = "0" + i.toString());
        var l = Math.floor(o % 6e4 / 1e3);
        l < 10 && (l = "0" + l.toString()), e.querySelector(".countdown-day").innerText = a, e.querySelector(".countdown-hour").innerText = s, e.querySelector(".countdown-minute").innerText = i, e.querySelector(".countdown-second").innerText = l, o < 0 && (clearInterval(r), e.querySelector(".countdown-day").innerText = "00", e.querySelector(".countdown-hour").innerText = "00", e.querySelector(".countdown-minute").innerText = "00", e.querySelector(".countdown-second").innerText = "00")
    }, 1e3); else e.querySelector(".countdown-day").innerText = "00", e.querySelector(".countdown-hour").innerText = "00", e.querySelector(".countdown-minute").innerText = "00", e.querySelector(".countdown-second").innerText = "00"
}

function getNodeindex(e) {
    for (var t = e.parentNode.children, n = 0; n < t.length; n++) if (t[n] == e) return n
}

function plusSlides(e, t) {
    var n = document.querySelector("#" + t);
    n && showSlides(getNodeindex(n.querySelector(".slide.active")) + e + 1, t)
}

function currentSlide(e, t) {
    document.querySelector("#" + t) && showSlides(e, t)
}

function showSlides(e, t) {
    var n = document.querySelector("#" + t);
    if (n) {
        let o;
        n.classList.add("carousel-init");
        const r = document.querySelectorAll("#" + t + " > .slide"),
            a = document.querySelectorAll("#" + t + " > .color-area > .dots > .dot"),
            s = document.querySelector("#" + t + " > .color-area > .color-text");
        for (e > r.length && (e = 1), e < 1 && (e = r.length), o = 0; o < r.length; o++) r[o].className = r[o].className.replace(" active", "");
        if (a && a.length) {
            for (o = 0; o < a.length; o++) a[o].className = a[o].className.replace(" active", "");
            a[e - 1].className += " active", s && (s.innerText = a[e - 1].getAttribute("color-text"))
        }
        r[e - 1] && (r[e - 1].className += " active")
    }
}

function changeInforDeal(e, t) {
    const n = document.querySelector("#deal" + t + "-button"), o = document.querySelector("#deal" + t + "-percent"),
        r = document.querySelector("#deal" + t + "-price > ins"),
        a = document.querySelector("#deal" + t + "-price > span");
    o && (o.innerText = getData(e, "percent")), r && (r.innerText = getData(e, "sale-price")), a && (a.innerText = getData(e, "base-price")), n && (n.href = getData(e, "link"))
}

function loadJS(e) {
    var t;
    void 0 !== e.src && "" != e.src && (t = document.createElement("script"), !0 === e.async && (t.async = !0), !0 === e.defer && (t.defer = !0), null != e.crossorigin && (t.crossorigin = e.crossorigin), isFunction(e.onload) && (t.onload = e.onload), t.src = e.src, document.head.appendChild(t))
}

function addClass(e, t) {
    document.querySelectorAll(e).forEach(e => {
        e.classList.add(t)
    })
}

function removeClass(e, t) {
    document.querySelectorAll(e).forEach(e => {
        e.classList.remove(t)
    })
}

function params(e) {
    var t = "";
    for (var n in e) e.hasOwnProperty(n) && (t.length > 0 && (t += "&"), t += encodeURI(n + "=" + e[n]));
    return t
}

function getClosest(e, t) {
    for (var n = t.charAt(0); e && e !== document; e = e.parentNode) {
        if ("." === n && e.classList.contains(t.substr(1))) return e;
        if ("#" === n && e.id === t.substr(1)) return e;
        if ("[" === n && e.hasAttribute(t.substr(1, t.length - 2))) return e;
        if (e.tagName.toLowerCase() === t) return e
    }
    return !1
}

function animate(e, t, n, o, r, a, s) {
    if (e) {
        var i = (new Date).getTime(), l = setInterval(function () {
            var c = Math.min(1, ((new Date).getTime() - i) / a);
            s ? e[t] = o + c * (r - o) + n : e.style[t] = o + c * (r - o) + n, 1 === c && clearInterval(l)
        }, 25);
        s ? e[t] = o + n : e.style[t] = o + n
    }
}

function html(e, t) {
    domelement = e, domelement.innerHTML = t;
    var n = [];
    ret = domelement.childNodes;
    for (var o = 0; ret[o]; o++) !n || !nodeName(ret[o], "script") || ret[o].type && "text/javascript" !== ret[o].type.toLowerCase() || n.push(ret[o]);
    for (script in n) evalScript(n[script])
}

function nodeName(e, t) {
    return e.nodeName && e.nodeName.toUpperCase() === t.toUpperCase()
}

function evalScript(e) {
    data = e.text || e.textContent || e.innerHTML || "";
    var t = document.getElementsByTagName("head")[0] || document.documentElement, n = document.createElement("script");
    n.type = "text/javascript", n.appendChild(document.createTextNode(data)), t.insertBefore(n, t.firstChild), t.removeChild(n)
}

function getData(e, t) {
    return e.getAttribute("data-" + t)
}

function append(e, t) {
    return e.innerHTML += t, e
}

function offset(e) {
    var t = e.getBoundingClientRect(), n = window.pageXOffset || document.documentElement.scrollLeft,
        o = window.pageYOffset || document.documentElement.scrollTop;
    return {top: t.top + o, left: t.left + n}
}

function goToID(e) {
    window.event.preventDefault();
    var t = document.querySelector("#" + e);
    if (t) {
        var n = offset(t).top, o = document.querySelector("#header").getBoundingClientRect().height;
        animate(document.scrollingElement || document.documentElement, "scrollTop", "", window.scrollY, n - o - 15, 500, !0)
    }
}

function isFunction(e) {
    return typeof e == typeof Function
}

function successAjax() {
    lazyload()
}

function ajax(e) {
    isFunction(e.before) && e.before();
    var t = new XMLHttpRequest, n = e.type.toLowerCase(), o = null;
    if (e.data && (o = params(e.data)), "get" == n && t.open("GET", e.url), "post" == n) if (t.open("POST", e.url), 1 == e.processForm) o = e.data; else t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    t.onload = function () {
        200 === t.status ? (e.success(t.response), successAjax()) : 200 !== t.status && void 0 !== e.error && e.error()
    }, e.data ? t.send(o) : t.send()
}

function pagingAjax(e, t) {
    var n = getClosest(e, ".pagination-ajax-load");
    getClosest(e, ".pagination-ajax").classList.add("active"), ajax({
        url: t, type: "GET", success: function (e) {
            if (n) {
                n.innerHTML = e;
                var t = offset(n).top, o = document.querySelector("#header").getBoundingClientRect().height;
                animate(document.scrollingElement || document.documentElement, "scrollTop", "", window.scrollY, t - o - 15, 500, !0)
            }
        }, error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        }
    })
}

function openQuickLink(e) {
    window.event.preventDefault();
    var t = getClosest(e, ".quick-link-menu"), n = t.querySelector(".quick-link-list").style.display, o = e.innerText;
    e.innerText = e.getAttribute("content"), e.setAttribute("content", o), t.querySelector(".quick-link-list").style.display = "none" == n ? null : "none"
}

function productSearch() {
    var e = document.getElementById("search-result"), t = document.getElementById("header-search-field").value;
    t ? delay(function () {
        ajax({
            url: "/ajax/search", type: "POST", data: {keyword: t}, success: function (t) {
                e.innerHTML = t, e.classList.add("show"), document.body.classList.add("no-scroll")
            }, error: function () {
                alert("Lỗi hệ thống! Vui lòng thử lại sau.")
            }
        })
    }, 500) : (e.classList.remove("show"), e.innerHTML = "", document.body.classList.remove("no-scroll"))
}

// function checkShowResult(e) {
//     if (e.stopPropagation(), document.getElementById("search-result").contains(e.target) && (console.log(e.target.className), "search-wrapper" !== e.target.className && "search-result" === e.target.id && document.getElementById("search-result").classList.contains("show"))) return document.getElementById("search-result").classList.remove("show"), void document.body.classList.remove("no-scroll")
// }

function openPage(e, t, n) {
    let o, r, a;
    for (r = document.querySelectorAll(`#${n} > .tabcontent`), o = 0; o < r.length; o++) r[o].classList.remove("active");
    for (a = document.getElementsByClassName("tablink"), o = 0; o < a.length; o++) a[o].classList.remove("active");
    e.classList.add("active"), document.getElementById(t).classList.add("active")
}

function openTab(e, t, n, o) {
    let r, a, s;
    for (a = document.querySelectorAll(`#${n} > .tabcontent`), r = 0; r < a.length; r++) a[r].classList.remove("active");
    for (s = document.querySelectorAll(`#${o} > .tablink`), r = 0; r < s.length; r++) s[r].classList.remove("active");
    e.classList.add("active"), document.getElementById(t).classList.add("active")
}

function openMenu(e) {
    e.classList.contains("change") ? closeNav() : openNav()
}

function openNav() {
    document.getElementById("mobile-menu").classList.add("open"), document.getElementById("mobile-menu-btn").classList.add("change")
}

function closeNav() {
    document.getElementById("mobile-menu").classList.remove("open"), document.getElementById("mobile-menu-btn").classList.remove("change")
}

document.addEventListener("DOMContentLoaded", function () {
    lazyload();
    var e = document.querySelectorAll(".watcher");
    e && e.forEach(e => {
        var t = e.getAttribute("data-time");
        countDown(e, t)
    });
    var t = document.querySelectorAll(".custom-carousel");
    t && t.forEach(e => {
        showSlides(1, e.getAttribute("id"))
    });
    var n = window.location.hash.substr(1);
    if (n) {
        var o = document.querySelector('.tablink[data-id="' + n + '"]');
        o && o.onclick && o.onclick(), goToID(n)
    }
    new Swiper("#body-banner", {
        speed: 1e3,
        autoHeight: !0,
        autoplay: {delay: 4e3, disableOnInteraction: !1},
        loop: !0,
        allowTouchMove: !0,
        navigation: {nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev"},
        breakpoints: {0: {slidesPerView: 1, spaceBetween: 0}, 768: {slidesPerView: 3, spaceBetween: 20}},
        on: {slideChange: lazyload}
    }), new Swiper("#event-banner", {
        speed: 1e3,
        autoHeight: !0,
        autoplay: {delay: 4e3, disableOnInteraction: !1},
        loop: !0,
        allowTouchMove: !0,
        navigation: {nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev"},
        breakpoints: {0: {slidesPerView: 1, spaceBetween: 0}, 768: {slidesPerView: 2, spaceBetween: 20}},
        on: {slideChange: lazyload}
    }), new Swiper("#euro-banner-full", {
        speed: 1e3,
        autoHeight: !0,
        autoplay: {delay: 4e3, disableOnInteraction: !1},
        loop: !0,
        allowTouchMove: !0,
        navigation: {nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev"},
        breakpoints: {0: {slidesPerView: 1, spaceBetween: 0}, 768: {slidesPerView: 1, spaceBetween: 20}},
        on: {slideChange: lazyload}
    }), new Swiper("#index-banner-bottom", {
        speed: 1e3,
        autoHeight: !0,
        autoplay: {delay: 4e3, disableOnInteraction: !1},
        loop: !0,
        allowTouchMove: !0,
        navigation: {nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev"},
        breakpoints: {0: {slidesPerView: 1, spaceBetween: 0}, 768: {slidesPerView: 3, spaceBetween: 20}},
        on: {slideChange: lazyload}
    }), new Swiper("#event-banner-two", {
        speed: 1e3,
        autoHeight: !0,
        autoplay: {delay: 4e3, disableOnInteraction: !1},
        loop: !0,
        allowTouchMove: !0,
        navigation: {nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev"},
        breakpoints: {0: {slidesPerView: 1, spaceBetween: 0}, 768: {slidesPerView: 4, spaceBetween: 20}},
        on: {slideChange: lazyload}
    });
    setCountPopupBanner()
}), document.addEventListener("scroll", function () {
    lazyload(), eventTab()
}), window.addEventListener("resize", lazyload), window.addEventListener("orientationchange", lazyload);
const accList = document.getElementsByClassName("accordion");
if (accList && accList.length) for (let e = 0; e < accList.length; e++) accList[e].addEventListener("click", function () {
    this.classList.toggle("active"), this.nextElementSibling.classList.toggle("expand")
});

function openModal(e) {
    document.getElementById(e).style.display = "block", document.querySelector("html").style.overflow = "hidden"
}

function closeModal(e) {
    document.getElementById(e).style.display = "none", document.querySelector("html").style.overflow = "", this.stopVideo()
}

var stopVideo = function () {
    var e = document.querySelectorAll("iframe"), t = document.querySelectorAll("video");
    if (e && e.length) for (let t = 0; t < e.length; t++) {
        let n = e[t].src;
        e[t].src = n
    }
    if (t && t.length) for (let e = 0; e < t.length; e++) t[e].pause()
};

function closeStore() {
    document.getElementById("dropbtn-header").classList.toggle("active"), document.getElementById("list-store-overlay").classList.toggle("show"), this.closeAllDropdown()
}

function showDropdown(e, t) {
    document.getElementById(e).classList.contains("show") ? (document.getElementById(e).classList.toggle("show"), t && (t.classList.toggle("active"), document.getElementById("list-store-overlay").classList.toggle("show")), this.closeAllDropdown()) : (this.closeAllDropdown(), document.getElementById(e).classList.toggle("show"), t && (t.classList.toggle("active"), document.getElementById("list-store-overlay").classList.toggle("show")))
}

function selectValueDropdown(e, t, n = "") {
    const o = e.parentNode.previousElementSibling;
    if (o.classList.contains("selected") || o.classList.add("selected"), t) {
        var r = document.getElementById(t);
        if (r.value = e.getAttribute("value"), r.onchange && r.onchange(), document.getElementById("insurance-link")) if ("" != r.value) {
            var a = e.innerHTML.indexOf("(");
            document.getElementById("insurance-link-new").innerHTML = "Xem chi tiết " + e.innerHTML.substr(0, a).toLowerCase() + " >"
        } else document.getElementById("insurance-link-new").innerHTML = ""
    }
    o.innerHTML = e.innerHTML, this.closeAllDropdown()
}

function selectFilterValue(e, t) {
    var n = e.parentNode.previousElementSibling, o = document.getElementById(t);
    o.value = e.getAttribute("value"), n.value = e.textContent, this.closeAllDropdown(), o.onchange && o.onchange()
}

function toggleSelectFilter(e) {
    e.nextElementSibling.classList.contains("show") ? this.closeAllDropdown() : (this.closeAllDropdown(), e.nextElementSibling.classList.toggle("show"))
}

function selectFilter(e) {
    let t, n;
    t = e.value.toUpperCase(), n = e.nextElementSibling.getElementsByTagName("a");
    for (let e = 0; e < n.length; e++) txtValue = n[e].textContent || n[e].innerText, txtValue.toUpperCase().indexOf(t) > -1 ? n[e].style.display = "" : n[e].style.display = "none"
}

function scrollTopElm(e) {
    var t = 0, n = !0;
    e && ((e = document.querySelector(e)) ? t = offset(e).top - document.querySelector("#header").getBoundingClientRect().height - 15 : n = !1);
    n && animate(document.scrollingElement || document.documentElement, "scrollTop", "", window.scrollY, t, 500, !0)
}

function scrollTopEventElm(e) {
    var t = 0, n = !0;
    if (e) if (e = document.querySelector(e)) {
        var o = offset(e).top, r = document.querySelector("#header").getBoundingClientRect().height;
        if (document.querySelector("#event-toolbar")) var a = document.querySelector("#event-toolbar").getBoundingClientRect().height; else a = 0;
        t = o - r - 15 - a
    } else n = !1;
    n && animate(document.scrollingElement || document.documentElement, "scrollTop", "", window.scrollY, t, 500, !0)
}

function addIframe(e, t) {
    var n = document.createElement("iframe");
    n.setAttribute("src", t), n.setAttribute("allowfullscreen", "allowfullscreen"), n.setAttribute("allow", "autoplay"), e.parentNode.insertBefore(n, e.nextSibling), e.parentNode.removeChild(e)
}

// function initApp() {
//     window.addEventListener("click", e => this.checkShowResult(e)), window.addEventListener("touchstart", e => this.checkShowResult(e))
// }

function closeAllDropdown() {
    var e, t = document.getElementsByClassName("dropdown-content");
    for (e = 0; e < t.length; e++) {
        t[e].classList.remove("show")
    }
    document.getElementById("dropbtn-header") && document.getElementById("list-store-overlay").classList.remove("show"), document.getElementById("list-store-overlay") && document.getElementById("list-store-overlay").classList.remove("show")
}

function submitRegisterEmail(e) {
    window.event.preventDefault(), button = e.querySelector("button"), ajax({
        url: "/ajax/register-email",
        type: "POST",
        data: new FormData(e),
        before: function () {
            button.setAttribute("disabled", !0)
        },
        success: function (t) {
            button.removeAttribute("disabled");
            var n = JSON.parse(t);
            if ("" != n.msg && alert(n.msg), n.field) {
                var o = e.querySelector("#" + n.field);
                o && o.focus()
            } else n.redirect ? window.location.href = n.redirect : window.location.reload()
        },
        error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        },
        processForm: !0
    })
}

function viewMoreNews(e) {
    window.event.preventDefault(), button = e.querySelector(".btn-load-more-products"), ajax({
        url: "/ajax/news-load-more",
        type: "POST",
        data: new FormData(e),
        before: function () {
            button.setAttribute("disabled", !0)
        },
        success: function (t) {
            button.removeAttribute("disabled");
            var n = JSON.parse(t), o = e.parentNode;
            append(o.previousElementSibling, n.html), n.count > 0 ? (e.querySelector('input[name="page"]').value = n.page, e.querySelector('input[name="count"]').value = n.count, e.querySelector("span").innerText = n.count) : o.remove()
        },
        error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        },
        processForm: !0
    })
}

function viewMoreNewsPromotion(e) {
    window.event.preventDefault(), button = e.querySelector(".btn-load-more-products");
    var t = new FormData(e);
    t.append("layout", "promotion"), ajax({
        url: "/ajax/news-load-more", type: "POST", data: t, before: function () {
            button.setAttribute("disabled", !0)
        }, success: function (t) {
            button.removeAttribute("disabled");
            var n = JSON.parse(t), o = e.parentNode;
            append(o.previousElementSibling, n.html), n.count > 0 ? (e.querySelector('input[name="page"]').value = n.page, e.querySelector('input[name="count"]').value = n.count, e.querySelector("span").innerText = n.count) : o.remove()
        }, error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        }, processForm: !0
    })
}

function viewMoreProgramPromotion(e) {
    window.event.preventDefault(), button = e.querySelector(".btn-load-more-products");
    var t = new FormData(e);
    t.append("layout", "promotion"), ajax({
        url: "/ajax/programs-load-more", type: "POST", data: t, before: function () {
            button.setAttribute("disabled", !0)
        }, success: function (t) {
            button.removeAttribute("disabled");
            var n = JSON.parse(t), o = e.parentNode;
            append(o.previousElementSibling, n.html), n.count > 0 ? (e.querySelector('input[name="page"]').value = n.page, e.querySelector('input[name="count"]').value = n.count, e.querySelector("span").innerText = n.count) : o.remove()
        }, error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        }, processForm: !0
    })
}

function viewAllBrand(e) {
    e.parentNode.querySelectorAll(".brand").forEach(e => {
        e.classList.remove("hide")
    }), e.classList.add("hide")
}

function actionBar(e) {
    var t, n = document.querySelector("#action-bar-global");
    n && (e ? (n.classList.remove("closed"), setCookie("show_action_bar", "0", -1), (t = getPopupPromotionCache()) && null == getCookie(t) && document.getElementById("action-promotion") && (document.getElementById("action-promotion").style.display = "none")) : (n.classList.add("closed"), setCookie("show_action_bar", "1", 1), (t = getPopupPromotionCache()) && null == getCookie(t) && document.getElementById("action-promotion") && (document.getElementById("action-promotion").style.display = "block")))
}

function getPopupPromotionCache() {
    return document.getElementById("popup-promotion-cache") ? document.getElementById("popup-promotion-cache").value : ""
}

function closePopupPromotion() {
    if (document.getElementById("popup-promotion")) {
        var e = getPopupPromotionCache();
        closeModal("popup-promotion"), setCookie(e, 1, 1), closeActionPromotion("action-promotion")
    }
}

function closeActionPromotion(e) {
    var t = getPopupPromotionCache();
    t && (document.getElementById(e).style.display = "none", setCookie(t, 1, 1))
}

function setCountPopupBanner(e) {
    if (document.querySelector("#popup-banner")) {
        var t = getCookie("popup_banner");
        setCookie("popup_banner", t = e || (t ? parseInt(t) + 1 : 1), .0417)
    }
}

function removePopupBanner() {
    document.querySelector("#popup-banner") && (setCountPopupBanner(3), document.querySelector("#popup-banner").remove())
}

function submitQrCodeChecking(e) {
    window.event.preventDefault(), button = e.querySelector("button"), ajax({
        url: "/ajax/submit-checkin-qrcode",
        type: "POST",
        data: new FormData(e),
        before: function () {
            button.setAttribute("disabled", !0)
        },
        success: function (t) {
            button.removeAttribute("disabled");
            var n = JSON.parse(t);
            if ("" != n.msg && alert(n.msg), n.field) {
                var o = e.querySelector("#" + n.field);
                o && o.focus()
            } else n.redirect ? window.location.href = n.redirect : window.location.reload()
        },
        error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        },
        processForm: !0
    })
}

function submitDangKyXemLive(e) {
    window.event.preventDefault(), button = e.querySelector("button"), ajax({
        url: "/ajax/submit-dang-ky-xem-live",
        type: "POST",
        data: new FormData(e),
        before: function () {
            button.setAttribute("disabled", !0)
        },
        success: function (t) {
            button.removeAttribute("disabled");
            var n = JSON.parse(t);
            if ("" != n.msg && alert(n.msg), n.field) {
                var o = e.querySelector("#" + n.field);
                o && o.focus()
            } else n.redirect ? window.location.href = n.redirect : window.location.reload()
        },
        error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        },
        processForm: !0
    })
}

function submitLookupOrder(e) {
    window.event.preventDefault(), button = e.querySelector("button"), ajax({
        url: "/ajax/submit-lookup-order",
        type: "POST",
        data: new FormData(e),
        before: function () {
            button.setAttribute("disabled", !0)
        },
        success: function (e) {
            button.removeAttribute("disabled");
            var t = JSON.parse(e);
            0 == t.error ? (html(document.querySelector("#content-body-lookup"), t.msg), console.log(t.msg)) : alert(t.msg)
        },
        error: function () {
            alert("Lỗi hệ thống! Vui lòng thử lại sau.")
        },
        processForm: !0
    })
}

// initApp();
